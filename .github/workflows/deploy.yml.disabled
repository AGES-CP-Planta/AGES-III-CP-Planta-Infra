name: Deploy CP-Planta Infrastructure

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - staging
          - production
      deployment_type:
        description: 'Deployment type'
        required: true
        default: 'swarm'
        type: choice
        options:
          - swarm
          - kubernetes

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "ENV_NAME=${{ github.event.inputs.environment || 'production' }}" >> $GITHUB_ENV
          echo "DEPLOY_TYPE=${{ github.event.inputs.deployment_type || 'swarm' }}" >> $GITHUB_ENV
        
      - name: Load environment-specific variables
        run: |
          if [ -f "./config/environments/${{ env.ENV_NAME }}.env" ]; then
            cat "./config/environments/${{ env.ENV_NAME }}.env" >> $GITHUB_ENV
          fi

  deploy-infrastructure:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Deploy infrastructure with Terraform
        run: |
          cd terraform/${{ env.CLOUD_PROVIDER }}
          terraform init
          terraform apply -auto-approve
          
      - name: Save infrastructure output
        run: |
          cd terraform/${{ env.CLOUD_PROVIDER }}
          terraform output -json > ../../deployment/${{ env.DEPLOY_TYPE }}/terraform_output.json
          
  configure-environment:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Ansible
        run: |
          pip install ansible
          
      - name: Prepare configuration files
        run: |
          # Create environment-specific configurations
          ./scripts/ci-cd/prepare_configs.sh \
            --env ${{ env.ENV_NAME }} \
            --deploy-type ${{ env.DEPLOY_TYPE }}
            
      - name: Setup environment
        run: |
          if [ "${{ env.DEPLOY_TYPE }}" == "swarm" ]; then
            ansible-playbook -i static_ip.ini deployment/swarm/setup/swarm_setup.yml
          else
            # Kubernetes setup (future)
            echo "Kubernetes setup not yet implemented"
          fi
          
  deploy-application:
    needs: configure-environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Deploy application
        run: |
          if [ "${{ env.DEPLOY_TYPE }}" == "swarm" ]; then
            # Using your existing deployment mechanism
            ./scripts/ci-cd/deploy.sh --provider ${{ env.CLOUD_PROVIDER }}
            
            # Add replication setup if needed
            if [ "${{ env.ENABLE_REPLICATION }}" == "true" ]; then
              ./deployment/swarm/setup/replication_setup.sh
            fi
          else
            # Kubernetes deployment (future)
            echo "Kubernetes deployment not yet implemented"
          fi
          
  verify-deployment:
    needs: deploy-application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Verify deployment
        run: |
          ./scripts/ci-cd/verify_deployment.sh \
            --env ${{ env.ENV_NAME }} \
            --deploy-type ${{ env.DEPLOY_TYPE }}