services:
  database:
    build:
      context: .
      dockerfile: dockerfile.postgres
    env_file:
      - .env
    restart: always
    ports:
      - ${POSTGRES_DOCKER_PORT}:${DB_PORT}
    stdin_open: true
    tty: true
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./scripts/db_create.sql:/docker-entrypoint-initdb.d/db_create.sql
      - ./scripts/db_insert.sql:/docker-entrypoint-initdb.d/db_insert.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - myapp-network

  pgbouncer:
    image: edoburu/pgbouncer:latest
    environment:
      - DB_HOST=database
      - DB_PORT=${DB_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - POOL_MODE=session
      - MAX_CLIENT_CONN=100
      - DEFAULT_POOL_SIZE=20
      - SERVER_RESET_QUERY=DISCARD ALL
    ports:
      - '6432:6432'
    depends_on:
      - database
    networks:
      - myapp-network
    volumes:
      - ./prod/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./prod/userlist.txt:/etc/pgbouncer/userlist.txt

  app:
    build:
      context: .
      dockerfile: dockerfile.node
    env_file:
      - .env
    restart: always
    ports:
      - '${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}'
    expose:
      - $NODE_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - .:/app/
      - /app/node_modules
    environment:
      # Change to use pgbouncer instead of direct database connection
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/${POSTGRES_DB}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - pgbouncer
    networks:
      - myapp-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - '80:80'
      - '443:443'
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - database
      - pgbouncer
    networks:
      - myapp-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']
    networks:
      - myapp-network

networks:
  myapp-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  redis-data: