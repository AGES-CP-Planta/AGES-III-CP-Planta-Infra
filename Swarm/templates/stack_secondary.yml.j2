services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email={{ acme_email }}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_network
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
    environment:
      - REGION=secondary
      - PEER_REGION={{ peer_region_host }}

  postgres_replica:
    image: norohim/postgres-optimal:latest
    environment:
      - ROLE=replica
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - NODE_ID=3
      - NODE_NAME=dr_replica
      - NODE_HOST=postgres_replica
      - REPLICATE_FROM={{ peer_region_host }}
      - REGION=secondary
    volumes:
      - replica_data:/var/lib/postgresql/data
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
    ports:
      - "5432:5432"

  pgbouncer:
    image: norohim/pgbouncer:latest
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REGION=secondary
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
    ports:
      - "6432:6432"

  backend:
    image: norohim/cp-planta-backend:latest
    environment:
      - NODE_ENV=production
      - DB_HOST=pgbouncer
      - DB_PORT=6432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - REGION=secondary
      - PEER_REGION_HOST={{ peer_region_host }}
      - PEER_REGION_PORT=3000
    networks:
      - backend_network
      - traefik_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend-secondary.rule=Host(`api-dr.{{ domain_name }}`)"
        - "traefik.http.routers.backend-secondary.entrypoints=websecure"
        - "traefik.http.routers.backend-secondary.tls.certresolver=myresolver"
        - "traefik.http.services.backend-secondary.loadbalancer.server.port=3000"
    ports:
      - "3000:3000"
        
  pgadmin:
    image: norohim/pgadmin:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL={{ pgadmin_email }}
      - PGADMIN_DEFAULT_PASSWORD={{ pgadmin_password }}
      - REGION=secondary
    networks:
      - backend_network
      - traefik_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pgadmin-secondary.rule=Host(`pgadmin-dr.{{ domain_name }}`)"
        - "traefik.http.routers.pgadmin-secondary.entrypoints=websecure"
        - "traefik.http.routers.pgadmin-secondary.tls.certresolver=myresolver"
        - "traefik.http.services.pgadmin-secondary.loadbalancer.server.port=80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin 

  frontend:
    image: norohim/cp-planta-frontend:latest
    environment:
      - NODE_ENV=production
      - PORT=3001
      - API_URL=https://api-dr.{{ domain_name }}
      - REGION=secondary
    networks:
      - frontend_network
      - traefik_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend-secondary.rule=Host(`dr.{{ domain_name }}`)"
        - "traefik.http.routers.frontend-secondary.entrypoints=websecure"
        - "traefik.http.routers.frontend-secondary.tls.certresolver=myresolver"
        - "traefik.http.services.frontend-secondary.loadbalancer.server.port=3001"

  dns:
    image: coredns/coredns:1.9.3
    command: -conf /etc/coredns/Corefile
    volumes:
      - ./dns/Corefile:/etc/coredns/Corefile
      - ./dns/zones:/etc/coredns/zones
    networks:
      - backend_network
      - frontend_network
      - traefik_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
    ports:
      - "53:53/udp"
      - "53:53/tcp"

networks:
  backend_network:
    driver: overlay
  frontend_network:
    driver: overlay
  traefik_network:
    driver: overlay

volumes:
  replica_data:
    driver: local
  pgadmin_data:
    driver: local
  traefik_data:
    driver: local