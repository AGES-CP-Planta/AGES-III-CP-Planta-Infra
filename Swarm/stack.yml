services:
  traefik:
    # Unchanged - existing configuration
    image: traefik:v2.9
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=sacilotto.andre@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_network
    deploy:
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.cpplanta.duckdns.org`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.routers.dashboard.middlewares=auth"
        - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$uyBtMQYo$$TMK6XINUQz.mLxjdJsl1j."
        - "traefik.http.services.traefik-svc.loadbalancer.server.port=8080"

  postgres:
    image: norohim/postgres-optimal:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
      labels:
        - "traefik.enable=false"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    image: norohim/cp-planta-backend:latest
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      # Additional environment variables for Prisma
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend_network
      - traefik_network
    depends_on:
      - postgres
    deploy:
      replicas: 1
      placement:
        preferences:
          - spread: node.role
      resources:
        limits:
          cpus: '0.40'
          memory: 384M
        reservations:
          cpus: '0.20'
          memory: 192M
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=Host(`api.cpplanta.duckdns.org`)"
        - "traefik.http.routers.backend.entrypoints=websecure"
        - "traefik.http.routers.backend.tls.certresolver=myresolver"
        - "traefik.http.services.backend.loadbalancer.server.port=3000"
    entrypoint: ["/bin/sh", "-c", "sleep 30 && node /app/dist/main.js"] # Wait for postgres to initialize
    ports:
      - "3000:3000"
        
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=sacilotto.andre@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=SecurePassword123
      - PGADMIN_LISTEN_PORT=5050
    depends_on:
      - postgres
    networks:
      - backend_network
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.cpplanta.duckdns.org`)"
        - "traefik.http.routers.pgadmin.entrypoints=websecure"
        - "traefik.http.routers.pgadmin.tls.certresolver=myresolver"
        - "traefik.http.services.pgadmin.loadbalancer.server.port=5050"
    volumes:
      - pgadmin_data:/var/lib/pgadmin 

  frontend:
    image: norohim/cp-planta-frontend:latest
    environment:
      - NODE_ENV=production
      - PORT=3001
      - API_URL=https://api.cpplanta.duckdns.org
    networks:
      - frontend_network
      - traefik_network
    depends_on:
      - backend
    deploy:
      replicas: 1
      placement:
        preferences:
          - spread: node.role
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`cpplanta.duckdns.org`)"
        - "traefik.http.routers.frontend.entrypoints=websecure"
        - "traefik.http.routers.frontend.tls.certresolver=myresolver"
        - "traefik.http.services.frontend.loadbalancer.server.port=3001"

  dns:
    image: coredns/coredns:1.9.3
    command: -conf /etc/coredns/Corefile
    volumes:
      - ./dns/Corefile:/etc/coredns/Corefile
      - ./dns/zones:/etc/coredns/zones
    networks:
      - backend_network
      - frontend_network
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.20'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
    ports:
      - "53:53/udp"
      - "53:53/tcp"

  duckdns:
    image: linuxserver/duckdns:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Sao_Paulo  
      - SUBDOMAINS=cpplanta
      - TOKEN=${DUCKDNS_TOKEN}  
      - LOG_FILE=false
    networks:
      - traefik_network
    deploy:
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.10'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M
      restart_policy:  
        condition: any
      labels:
        - "traefik.enable=false"

  visualizer:
    image: dockersamples/visualizer:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_network
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.visualizer.rule=Host(`viz.cpplanta.duckdns.org`)"
        - "traefik.http.routers.visualizer.entrypoints=websecure"
        - "traefik.http.routers.visualizer.tls.certresolver=myresolver"
        - "traefik.http.services.visualizer.loadbalancer.server.port=8080"

networks:
  backend_network:
    driver: overlay
  frontend_network:
    driver: overlay
  traefik_network:
    driver: overlay

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  traefik_data:
    driver: local